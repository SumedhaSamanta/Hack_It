# Python3 program to implement 
# the above appraoach 

# Function to count total 
# number of valid substrings 
def countSub(Str): 

	n = len(Str)

	# Stores the count of 
	# substrings 
	ans = 0

	# Stores the frequency 
	# of characters 
	cnt = 26 * [0]

	# Initialised both pointers 
	# to beginning of the string 
	i, j = 0, 0

	while (i < n):

		# If all characters in 
		# substring from index i 
		# to j are distinct 
		if (j < n and
		(cnt[ord(Str[j]) - ord('a')] == 0)): 

			# Increment count of j-th 
			# character 
			cnt[ord(Str[j]) - ord('a')] += 1

			# Add all substring ending 
			# at j and starting at any 
			# index between i and j 
			# to the answer 
			ans += (j - i + 1) 

			# Increment 2nd pointer 
			j += 1

		# If some characters are repeated 
		# or j pointer has reached to end 
		else: 

			# Decrement count of j-th 
			# character 
			cnt[ord(Str[i]) - ord('a')] -= 1

			# Increment first pointer 
			i += 1

	# Return the final 
	# count of substrings 
	return ans

# Driver code
Str = "gffg"

